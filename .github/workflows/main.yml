name: Build & Deploy

on:
  pull_request:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v3.0.0
        with:
          context: .
          push: true
          tags: taneraruk/task1:latest

      - name: Set Kubernetes Context
        uses: azure/k8s-set-context@v1
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG }}

      - name: Deploy to K8s
        run: |
          cat <<EOF | kubectl apply -f -
          apiVersion: v1
          kind: Service
          metadata:
            name: task1-service
            namespace: tnr
            labels:
              app: task1
          spec:
            ports:
            - name: http
              port: 80
              protocol: TCP
              targetPort: 8080
            selector:
              app: task1
          ---
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: task1-deployment
            namespace: tnr
            labels:
              app: task1
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: task1
            template:
              metadata:
                labels:
                  app: task1
              spec:
                containers:
                - name: task1
                  image: taneraruk/task1
                  imagePullPolicy: Always
                  ports:
                    - containerPort: 8080
                imagePullSecrets:
                - name: github-container-registry
          
          ---
          apiVersion: networking.k8s.io/v1
          kind: Ingress
          metadata:
            name: task1-ingress
            namespace: tnr
          spec:
            rules:
              - host: tnr-dart.fria.io
                http:
                  paths:
                    - path: /
                      pathType: Prefix
                      backend:
                        service:
                          name: task1-service
                          port:
                            number: 80
          EOF
